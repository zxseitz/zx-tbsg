plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.springframework.boot' version '2.3.5.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

group = 'ch.zxseitz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':shared')
    implementation project(':games:reversi')

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation 'log4j:log4j:1.2.17'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    //implementation 'com.fasterxml.jackson.core:jackson-core:2.11.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.12.4'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    // solves java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter in io.jsonwebtoken
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'junit:junit:4.13'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

bootJar {
    destinationDirectory = file("$rootDir/build/")
    manifest {
        attributes 'Start-Class': 'ch.zxseitz.tbsg.server.TbsgApplication'
    }
}
